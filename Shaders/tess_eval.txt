#version 460 core

layout(quads, equal_spacing, ccw) in;


uniform sampler2D heightMap;
uniform sampler2D normalMap;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

in vec2 tex_control[];
out vec2 tex_eval;



uniform vec3 light_pos;
out vec3 fragment_position;
out vec3 light_pos_out;


vec4 interpolate( vec4 v0, vec4 v1, vec4 v2, vec4 v3)
{
	vec4 a = mix(v0, v1, gl_TessCoord.x);
	vec4 b = mix(v3, v2, gl_TessCoord.x);
	return mix(a, b, gl_TessCoord.y);
}


void main()
{
	vec4 mixPos = interpolate(gl_in[0].gl_Position, gl_in[1].gl_Position, gl_in[2].gl_Position, gl_in[3].gl_Position);
	vec4 mixTex = interpolate(vec4(tex_control[0],0,0), vec4(tex_control[1],0,0), vec4(tex_control[2],0,0),vec4(tex_control[3],0,0));

	float height = texture(heightMap, mixTex.xy).y * .75;
	mixPos += (height * vec4(0, 0, 1, 0));

	tex_eval = mixTex.xy;
	gl_Position = projection * view * model * mixPos;

	fragment_position = (model * mixPos).xyz;
	vec4 l_pos = model * vec4(light_pos, 1.0);
    light_pos_out = l_pos.xyz;

}	
