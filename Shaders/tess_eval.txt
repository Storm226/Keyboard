#version 460 core

layout(quads, equal_spacing, ccw) in;

in vec3 position_control[];
in vec2 tex_control[];

uniform sampler2D heightMap;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

out vec2 tex_coord;



void main()
{
	float u = gl_TessCoord.x;
	float v = gl_TessCoord.y;

	vec2 t0 = tex_control[0];
	vec2 t1 = tex_control[1];
	vec2 t2 = tex_control[2];

	tex_coord = t0 * u + t1 * v + t2 * (1-u-v);
	//tex_coord = tex_control[0];

	vec3 t3 = position_control[0];
	vec3 t4 = position_control[1];
	vec3 t5 = position_control[2];

	vec3 modelPos = t3 * u + t4 * v + t5 * (1-u-v);
	//vec3 modelPos = position_control[0];


	float height = texture(heightMap, tex_coord).y;
	vec3 normal = vec3(0,1,0);

	modelPos = modelPos + (normal * height * 5);
	
	gl_Position = projection * view * model * vec4(modelPos, 1.0);

}	
